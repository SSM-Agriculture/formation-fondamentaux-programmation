# Principales opérations sur les données et/ou tableaux {.backgroundTitre}


## Importer des données à partir d’un fichier

**Objectif : charger le contenu d’un fichier de données dans un tableau manipulable dans l’environnement de traitement des données.**  

Exemples :  
- charger dans CERISE le contenu d’un fichier CSV  
- ouvrir un fichier Excel  
  

Paramètres possibles :  
- emplacement et nom du fichier  
- encodage du fichier (UTF8, ASCII…)  
- présence d’entêtes avec le nom des variables/colonnes  
- type de certaines variables/colonnes  
- nom de la variable de type tableau initialisée avec les données chargées


## Sélectionner des variables/colonnes

**Objectif : conserver uniquement certaines variables/colonnes d’un tableau de données afin de se concentrer sur les informations utiles ou pertinentes.**  
  

Paramètres nécessaires :  
- nom du tableau concerné  
- nom ou numéro d’ordre des variables/colonnes sélectionnées  
  
Remarques :  
- l’opération de sélection de variables/colonnes n’influence pas le nombre de lignes du tableau  
- la réduction du volume des données induite par cette opération améliore la performance des traitements   
- certains langages, dont R, permettent de préciser les colonnes à enlever au lieu de celles à conserver (« sélectionner toutes les colonnes sauf»)

## Sélectionner des variables/colonnes

![](images/selection_schema.png){fig-align="center"}

## Renommer des variables/colonnes

**Objectif : modifier les noms des variables/colonnes d’un tableau afin de les rendre plus compréhensibles, clairs, homogènes ou adaptés à l’analyse.**  

  
Paramètres nécessaires :  
- nom du tableau concerné  
- nom ou numéro d’ordre de la variable/colonne à modifier  
- nouveau nom de la variable/colonne  
  
Remarques :  
- certains environnements de traitement des données ou langages peuvent être restrictifs pour les intitulés de variables/colonnes (présence de caractères spéciaux ou d’accents, nombre de caractères, mots-clés interdits …)  
- certaines structures adoptent des règles de nommage communes pour faciliter la compréhension et la maintenance de leurs projets ou traitements. Si elles existent, elles doivent être respectées.  

## Renommer des variables/colonnes

![](images/renommage_schema.png){fig-align="center"}

## Filtrer des données

**Objectif : conserver uniquement certaines lignes d’un tableau de données en fonction d’un critère défini afin de se concentrer sur les informations utiles ou pertinentes.**  
  

Paramètres nécessaires :  
- nom du tableau concerné  
- critère de filtre reposant sur une ou plusieurs variables/colonnes du tableau  
  
Remarques :  
- l’opération de filtrage des données n’influence pas le nombre de variables/colonnes du tableau  
- la réduction du volume des données induite par cette opération améliore la performance des traitements  

## Filtrer des données

![](images/filtre_schema.png){fig-align="center"}

## Filtrer des données

![](images/filtre2_schema.png){fig-align="center"}

## Trier des données

**Objectif : classer les données d’un tableau selon les valeurs d’une ou plusieurs variables/colonnes.**  
  

Paramètres nécessaires :  
- nom du tableau concerné  
- nom des variables/colonnes utilisées pour le classement  
- ordre de tri  
  
Remarques : 
- si plusieurs variables/colonnes sont impliquées dans un tri, l’ordre de tri peut être différent pour chacune d’elles  
- tous les langages ne traitent pas de la même manière les valeurs vides.  

## Trier des données

![](images/tri_schema.png){fig-align="center"}

## Trier des données

![](images/tri2_schema.png){fig-align="center"}

## Enrichir les données par ajout d’une variable/colonne

**Objectif : compléter les informations d’un tableau en ajoutant une variable/colonne nécessaire à l’analyse.**  
  

Paramètres nécessaires :  
- nom du tableau concerné  
- nom de la nouvelle variable/colonne  
- type de la nouvelle variable/colonne  
- règle d’initialisation des valeurs de la nouvelle variable/colonne  
  
Remarque :  
- les règles d’initialisation des valeurs peuvent être simples (une seule valeur pour toutes les lignes) ou plus complexes (calcul à partir des données de plusieurs variables/colonnes, valeurs différentes selon des conditions définies …)

## Enrichir les données par ajout d’une variable/colonne

![](images/enrichissement_schema.png){fig-align="center"}

## Enrichir les données par jointure/appariement

**Objectif : compléter les informations d’un tableau en l’associant à un autre par rapprochement des valeurs présentes dans des variables/colonnes communes.**
  

Paramètres nécessaires :  
- nom des 2 tableaux concernés  
- nom des variables/colonnes utilisées pour le rapprochement  
- type de jointure souhaitée  

Remarques :  
- les types de jointure possibles définissent le devenir des lignes du tableau qui sont présentes dans un tableau mais pas dans l’autre.  

## Enrichir les données par jointure/appariement

![](images/jointure_schema.png){fig-align="center"}

## Enrichir les données par jointure/appariement

![](images/operations_schema.png){fig-align="center"}

## Enrichir les données par jointure/appariement

![](images/jointure2_schema.png){fig-align="center"}

## Agréger les données

**Objectif : regrouper des lignes d’un tableau selon une ou plusieurs variables/colonnes afin de calculer des valeurs agrégées pour chacun des groupes.**  
  

Paramètres nécessaires :  
- nom du tableau concerné  
- nom des variables/colonnes utilisées pour le regroupement  
- type d’agrégat souhaité (comptage, somme, moyenne, pourcentage, minimum, maximum …)  
  
Exemples :  
- à partir d’un tableau de parcelles (département, commune, référence cadastrale, superficie), calculer la superficie moyenne d’une parcelle pour chaque commune  
- à partir d’un tableau de personnes (nom, prénom, date de naissance), calculer le nombre de personnes selon leur tranche d’âge

## Agréger des données

![](images/agregation_schema.png){fig-align="center"}

## Gérer des doublons

**Objectif : identifier les lignes répétées dans un tableau de données et choisir le traitement adéquat pour l’analyse.**  
  

Paramètres nécessaires :  
- nom du tableau concerné  
- nom des variables/colonnes utilisées pour la recherche des doublons  
  
Remarque :  
- plusieurs lignes d’un tableau peuvent être qualifiées de doublons même si la totalité des variables/données ne sont pas identiques  
  
Ex : dans une liste de personnes (n°INSEE, nom, prénom, lieu de naissance), plusieurs lignes référençant le même numéro INSEE peuvent être considérées comme doublons car cette variable/colonne est identifiante (1 numéro est attribué à un seul individu) et unique pour une personne (un individu ne possède qu’un seul numéro).

## Gérer des doublons

![](images/doublons_schema.png){fig-align="center"}

## Concaténer des tables

**Objectif : assembler plusieurs tableaux de données**  
- **par ajout de lignes (si les tableaux possèdent les même variables/colonnes)**  
- **par ajout de colonnes sans rapprochement des données  (si les tableaux possèdent les mêmes objets en ligne)**  
  

Paramètres nécessaires :  
- nom des tableaux concernés  
- type de concaténation (ajout de lignes ou ajout de colonnes)  
  
Remarque :  
- la concaténation de tables par ajout de colonnes ne doit pas être confondue avec un appariement. Les données des tableaux ne font pas l’objet de rapprochement selon des variables/colonnes communes.

## Concaténer des tables

![](images/concatenation_schema.png){fig-align="center"}
## Concaténer des tables

![](images/concatenation2_schema.png){fig-align="center"}

## Transposer une table

**Objectif : modifier la structure d’un tableau de façon à présenter :**  
- **en lignes des données qui étaient présentes en variables/colonnes**   
- **en variables/colonnes des données qui étaient présentes en lignes**  

Exemple issu de la formation R du SSM Agriculture :  

![](images/clipboard-pivot.png){fig-align="center"}

[Exercice 9 et 10 (manipulation des tableaux)]{.Terre_battue2}